<!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8" />
        <title>Shining Star</title>
        <style>
            body {
                background-image: url('Constellations Background.jpg');
                background-size: cover;
            }
            #glcanvas {
                position: absolute;
                margin: auto;
                left: 0px;
                right: 0px;
                top: 0px;
                bottom: 0px;
                text-align: center;
                width: 80%;
                height: 80%;
                overflow: auto;
                background-color: white;
                border-style: solid;
                border-radius: 10px;
                border-color: rgb(16, 20, 28);
            }
        </style>
    </head>
    <body>
        <div id = "glcanvas">
            <h1 style = "color: rgb(16, 20, 28);">Shining Star</h1>
            <h2 style = "color: rgb(16, 20, 28);">Introduction</h2>
            <h3 style = "color: rgb(16, 20, 28);">Project Description</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px">Shining Star is a visualization of more than the 88 official 
            IAU constellations from 1930. With a total of 107,868 stars, this Virtual Reality project allows for the revelation 
            of the following constellations for the purposes of comparing and contrasting: Modern, Arabic Al-Sufi, Arabian Peninsula, 
            Arabic Indigenous, Arabic Lunar Mansions, Egyptian, and None. When viewing the Arabic Indigenous constellations, Al-Thuraya 
            is distinguished from the rest by its glow. Selecting its accompanying menu option reveals information about the constellation.</p>
            <p style = "color: rgb(16, 20, 28); padding: 5px">Using a timescale factor of 1,000 years per second, an observation of the 
            currently visible constellations' change over time is permitted. Additionally, the distance between the stars and constellations 
            can be altered from 1/4 to 3 times the original. If need be, the location, orientation, and time can all be reset to the starting 
            point. Furthermore, the color scheme can be toggled between "Stellar" and "Exoplanet" with an information panel communicating the 
            mapping for each.</p>
            <p style = "color: rgb(16, 20, 28); padding: 5px">Finally, the audio can be swapped between a piano cover of "One More Light" 
            by Linkin Park and a piano cover of "Stars" by Skillet. The volume can be adjusted as preferred. The aforementioned covers were 
            performed by Artistic Amit Music and Pianofy respectively.</p>

            <h3 style = "color: rgb(16, 20, 28);">How to Use the Application</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">In order to use the application, one must first clone
             the project from GitHub and install the necessary software. Instructions to do so are included below in the 
             section titled "Instructions to Build and Run". Assuming the instructions have been followed and completed,
             the project should open in the Unity Editor. When there, pressing the Play button at the top will allow for
             first-person navigation through the environment using a simulator of the CAVE2. The keys WASD are used to move 
             in the space, QE to turn the CAVE2, RF to raise and lower it, IJKL to move the player themselves in the CAVE2 
             space, and UO to rotate them. All functionalities are activated through the standard menu which is revealed by
             pressing the right mouse button. When there, select "Shining Star >" by pressing down on the keyboard or hovering 
             the mouse over the option. Finally, like before, proceed by pressing down on the right mouse button.</p>
             <div class = "row">
                <div class = "column">
                    <img src = "Desktop Constellations.png" alt = "Desktop" style = "width: 95%; height: 95%;">
                </div>
            </div>

            <h2 style = "color: rgb(16, 20, 28);">Instructions to Build and Run</h2>
            <h3 style = "color: rgb(16, 20, 28);">Cloning Project from GitHub</h1>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">To begin, clone the project from the following link by 
                clicking on the green button that says "Code", selecting the "HTTPS" option, and copying the web URL:</p>
            <a href = "https://github.com/FarahKamleh/CS-528-Shining-Star" style = "color: rgb(16, 20, 28);">FarahKamleh/CS-528-Shining-Star</a>
            <div class = "row">
                <div class = "column">
                    <img src = "CS528 GitHub.png" alt = "CS528 GitHub" style = "width: 95%; height: 95%; padding: 5px;">
                </div>
            </div>
            <h3 style = "color: rgb(16, 20, 28);">Installing Git to Clone</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">To download and install Git, navigate to the following webpage and select the option for your device:</p>
            <a href = "https://git-scm.com/downloads" style = "color: rgb(16, 20, 28);">https://git-scm.com/downloads</a>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">Afterwards, open Git Bash, change the current working directory to the location of interest, and type "git 
                clone" proceeded by the copied URL. Finally, press the Enter button.</p>
                <div class = "row">
                    <div class = "column">
                        <img src = "Git Clone.png" alt = "Git Clone" style = "width: 95%; height: 95%; padding: 5px;">
                    </div>
                </div>
            <h3 style = "color: rgb(16, 20, 28);">Installing Unity and Unity Hub</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">Extract the ZIP file as needed. The next step is to install Unity. To do 
                so, go to https://unity.com and select the blue "Get Started" button at the top. Select the "Individual" tab and click on another 
                blue "Get started" button underneath "Personal". Download Unity Hub for your preferred platform. Install Unity Hub which will host 
                your Unity projects. In Unity Hub, click on "Installs" then "Install Editor" to install a new Unity version. This project uses 
                version 2019.2.11f1. Visit the download archive at https://unity3d.com/get-unity/download/archive and select Unity 2019.x to find 
                the correct version. Install using Unity Hub. It should then appear there. Open the project by pressing the "Open" button in "Projects".</p>
            <div class = "row">
                <div class = "column">
                    <img src = "2019 Unity Hub.png" alt = "2019 Unity Hub" style = "width: 95%; height: 95%; padding: 5px;">
                </div>
            </div>

            <h2 style = "color: rgb(16, 20, 28);">Star and Constellation Data</h2>
            <h3 style = "color: rgb(16, 20, 28);">Datasets</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">The star data was acquired from the ATHYG Database which can be accessed using the following link:</p>
            <a href = "https://github.com/astronexus/ATHYG-Database" style = "color: rgb(16, 20, 28);">https://github.com/astronexus/ATHYG-Database</a>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">The constellation data, however, was acquired from Stellarium Skycultures which can be found using 
                the link below. The constellations of interest are "arabic_al-sufi", "arabic_arabian_peninsula", "arabic_indigenous", "arabic_lunar_mansions", "egyptian", 
                and "modern":</p>
            <a href = "https://github.com/Stellarium/stellarium/tree/master/skycultures" style = "color: rgb(16, 20, 28);">https://github.com/Stellarium/stellarium/tree/master/skycultures</a>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">Lastly, to implement the color-coding option for exoplants, the NASA Exoplanet Archive was used:</p>
            <a href = "https://exoplanetarchive.ipac.caltech.edu/cgi-bin/TblView/nph-tblView?app=ExoTbls&config=PS" style = "color: rgb(16, 20, 28);">NASA Exoplanet Archive</a>
            <h3 style = "color: rgb(16, 20, 28);">Preprocessing</h3>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">For the star data, the "athyg_26_reduced_m10" dataset has been reduced to only contain the columns for HIP, 
                DIST, X0, Y0, Z0, ABSMAG, MAG, VX, VY, VZ, and SPECT. The SPECT column has been filtered down to the first letter to assist the parser. All rows missing X, 
                Y, Z, and spectral types have also been removed. Such filtering was accomplished using Jupyter Notebook and Python. An example is included in an image below. To determine 
                the stellar color scheme, Harvard's spectral classification chart was referenced:</p>
            <div class = "row">
                <div class = "column">
                    <img src = "Stellar Classification.png" alt = "Stellar Classification" style = "width: 50%; height: 50%; padding: 5px;">
                </div>
            </div>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">For the constellations, the hipparcos numbers were used to draw each individual line, creating the connections 
                from star to star. Unfortunately, some sets included HIP numbers that did not appear in the aforementioned star dataset. As a result, the drawing of the constellations at runtime 
                resulted in many lines being missing. By removing the HIP numbers that did not appear in both datasets, the full constellations appeared.</p>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">Lastly, although mostly filtered using the NASA Exoplanet Archive directly by retaining the HIP ID and number of planets, Jupyter 
                Notebook was used to drop rows where the HIP ID is null as well as duplicates.</p>
            <div class = "row">
                <div class = "column">
                    <img src = "Jupyter Notebook.png" alt = "Jupyter Notebook" style = "width: 50%; height: 50%; padding: 5px;">
                </div>
            </div>

            <h2 style = "color: rgb(16, 20, 28);">Optimizations</h2>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">Because Shining Star works with large datasets, optimization is vital. For example, the number of stars remaining after 
                preprocessing was 107,868, all of which needed to be present. In order to retain a smooth frame rate, only the stars within close proximity of the user are visualized. 
                When the user travels, those at a farther distance disappear while new ones are visualized. This ensures that the frame rate does not tank, especially at launch. 
                Another example in which revisions were necessary was for the functionality that allows the user to start, reverse, and stop time to observe how the position of the 
                stars and constellations change over time. The first attempt at doing so involved redrawing the stars and constellations at every frame within the Update() function. 
                While the logic works, the stress of doing so unfortunately, but expectedly, resulted in the application crashing. Therefore, the solution was to introduce a new thread 
                through the use of an inuemerator function which took care of the re-drawing exclusively. If given more time, another method to increase the frame rate would be to "turn off" the 
                billboarding of the stars while this functionality is active.</p>

            <h2 style = "color: rgb(16, 20, 28);">Videos</h2>
            <embed width="90%" height="90%" src="https://www.youtube.com/embed/zjFOvPO38AY?si=j5wub01AccdqBTLX" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></embed>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">The video above covers the basic functionalities of the "Shining Star" project in the 
                CAVE2 Hybrid Reality Environment.</p>
            <embed width="90%" height="90%" src="https://www.youtube.com/embed/vH9R6cBWla4?si=P3PN3RFCKiA9y1_2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></embed>
            <p style = "color: rgb(16, 20, 28); padding: 5px;">The video above is a live presentation of "Shining Star" as recorded by a professor. 
                It should be noted that the left and right images are visible because the necessary 3D glasses were not placed in front of the phone's 
                lens. Additionally, the audio is quite soft.</p>

            <h2 style = "color:rgb(16, 20, 28);">Additional Image Sources</h2>

            <h3 style = "color: rgb(16, 20, 28);">Background Source:</h3>
            <a href = "https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fl442llm5bs521.jpg" style = "color: rgb(16, 20, 28);">Constellations Wallpaper</a>

            <h2 style = "color: rgb(16, 20, 28);">Return to Landing Page:</h2>
        <a href = "./index.htm" style = "color: rgb(16, 20, 28); padding: 20px;">Farah Kamleh - Landing Page</a>
        </div>
    </body>
</html>